{"version":3,"sources":["components/flights/flight.js","components/Input/Input.js","components/Message/Message.js","components/Messages/Messages.js","App.js","index.js"],"names":["socket","Input","setMessage","sendMessage","message","className","type","placeholder","value","onChange","target","onKeyPress","event","key","onClick","e","Message","name","date","datess","my_name","Date","parseInt","console","log","day","Moment","format","Messages","messages","map","i","Flights","useState","setName","setMessages","useEffect","io","path","emit","on","flights_data","preventDefault","App","component","ReactDOM","render","document","getElementById"],"mappings":"6GAUIA,E,wECMWC,EAdD,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,QAA5B,OACZ,uBAAMC,UAAU,OAAhB,UACE,uBACEA,UAAU,QACVC,KAAK,OACLC,YAAY,oBACZC,MAAOJ,EACPK,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BN,EAAWM,IAChDG,WAAY,SAAAC,GAAK,MAAkB,UAAdA,EAAMC,IAAkBV,EAAYS,GAAS,QAEpE,wBAAQP,UAAU,aAAaS,QAAS,SAAAC,GAAC,OAAIZ,EAAYY,IAAzD,sB,yBCKWC,EAdC,SAAC,GAAmD,IAAD,IAAhDZ,QAAWa,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAAMd,EAAyB,EAAzBA,QACtCe,GAD+D,EAAdC,QACxC,IAAIC,KAAKC,SAASJ,KAG7B,OAFFK,QAAQC,IAAI,iBACZD,QAAQC,IAAIL,EAAOM,KAEf,gCACE,+BAAKR,EAAL,OACE,4BAAIb,IACJ,6BAAKsB,IAAOP,GAAQQ,OAAO,6BCEpBC,EANE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUT,EAAb,EAAaA,QAAb,OACf,cAAC,IAAD,CAAgBf,UAAU,WAA1B,SACGwB,EAASC,KAAI,SAAC1B,EAAS2B,GAAV,OAAgB,8BAAa,cAAC,EAAD,CAAS3B,QAASA,EAASgB,QAASA,KAAvCW,SH0D7BC,EAvDC,WACd,MAA2BC,mBAAS,IAApC,mBAAOb,EAAP,KAAgBc,EAAhB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBM,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAO7B,EAAP,KAAgBF,EAAhB,KAGAkC,qBAAU,WAERpC,EAASqC,IAZI,yDAYS,CAACC,KAAM,eAE5B,IAGHF,qBAAU,WAERpC,EAAOuC,KAAK,aACX,IAGHH,qBAAU,WAERpC,EAAOwC,GAAG,WAAW,SAAAC,GACnBlB,QAAQC,IAAIiB,GACZlB,QAAQC,IAAI,yBAGb,IAEHY,qBAAU,WAERpC,EAAOwC,GAAG,QAAQ,SAAApC,GAChB+B,GAAY,SAAAN,GAAQ,4BAAQA,GAAR,CAAkBzB,OACtCmB,QAAQC,IAAIpB,GACZmB,QAAQC,IAAI,0BAGb,IAUH,OACA,gCACE,cAAC,EAAD,CAAUK,SAAUA,EAAUZ,KAAMG,IACpC,uBAAOb,YAAY,OAAOD,KAAK,OAAOG,SAAU,SAACG,GAAD,OAAWsB,EAAQtB,EAAMF,OAAOF,UAChF,cAAC,EAAD,CAAOJ,QAASA,EAASF,WAAYA,EAAYC,YAZ/B,SAACS,GACnBA,EAAM8B,iBACHtC,IACDJ,EAAOuC,KAAK,OAAQ,CAACnC,QAASA,EAASa,KAAMG,IAC7ClB,EAAW,Y,eIvCFyC,EATH,WACV,OACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOL,KAAK,IAAIM,UAAWZ,OCLjCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8604f034.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport Input from '../Input/Input'\nimport Messages from '../Messages/Messages';\n\n\nconst ENDPOINT = 'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/';\n\nlet socket;\n\nconst Flights = () => {\n  const [my_name, setName] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n\n  useEffect(() => {\n\n    socket = io(ENDPOINT, {path: '/flights'});\n\n  }, []);\n\n\n  useEffect(() => {\n\n    socket.emit('FLIGHTS')\n  }, []);\n\n\n  useEffect(() => {\n\n    socket.on('FLIGHTS', flights_data => {\n      console.log(flights_data);\n      console.log(\"MENSAJE TREMENDO\");\n    });\n  \n  }, []);\n\n  useEffect(() => {\n\n    socket.on('CHAT', message => {\n      setMessages(messages => [...messages, message]);\n      console.log(message);\n      console.log(\"RECIBIDO COMPADRE\");\n    });\n  \n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if(message) {\n      socket.emit('CHAT', {message: message, name: my_name});\n      setMessage('');\n    }\n  }\n\n  return (\n  <div>\n    <Messages messages={messages} name={my_name} />\n    <input placeholder=\"Name\" type=\"text\" onChange={(event) => setName(event.target.value)} />\n    <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n  </div>\n  );\n}\n\nexport default Flights;\n","import React from 'react';\n\nconst Input = ({ setMessage, sendMessage, message }) => (\n  <form className=\"form\">\n    <input\n      className=\"input\"\n      type=\"text\"\n      placeholder=\"Type a message...\"\n      value={message}\n      onChange={({ target: { value } }) => setMessage(value)}\n      onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n    />\n    <button className=\"sendButton\" onClick={e => sendMessage(e)}>Send</button>\n  </form>\n)\n\nexport default Input;\n","import React from 'react';\nimport Moment from 'moment';\n\nconst Message = ({ message: { name, date, message }, my_name }) => {\nvar datess = new Date(parseInt(date));\nconsole.log(\"VIENE LA HORA\");\nconsole.log(datess.day);\n  return (\n    <div>\n      <h4>{name}:</h4>\n        <p>{message}</p>\n        <h5>{Moment(datess).format('DD-MM-YYYY HH:mm:ss')}</h5>\n        \n      </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\n\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport Message from '../Message/Message';\n\n\nconst Messages = ({ messages, my_name }) => (\n  <ScrollToBottom className=\"messages\">\n    {messages.map((message, i) => <div key={i}><Message message={message} my_name={my_name}/></div>)}\n  </ScrollToBottom>\n);\n\nexport default Messages;\n","import React from 'react';\n\nimport Flights from './components/flights/flight';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      {/* <Route path=\"/\" exact component={Join} /> */}\n      <Route path=\"/\" component={Flights} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}